{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Colors from \"../../styles/Colors\";\nimport { useState } from \"react\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Counter = function Counter(props) {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    maxValue = _useState2[0],\n    setMaxValue = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    title = _useState4[0],\n    setTitle = _useState4[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.levelBlock,\n      children: [_jsx(View, {\n        style: styles.levelNumberContainer,\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.subtractSlot(props.id);\n          },\n          children: _jsx(Text, {\n            style: styles.levelNumber,\n            children: props.amount\n          })\n        })\n      }), _jsx(View, {\n        style: styles.levelTitleContainer,\n        children: _jsx(TextInput, {\n          style: styles.levelTitle,\n          multiline: true,\n          onChangeText: function onChangeText(newText) {\n            setTitle(newText);\n          },\n          onSubmitEditing: function onSubmitEditing() {\n            props.setTitle(props.id, title);\n          },\n          onBlur: function onBlur() {\n            props.setTitle(props.id, title);\n          },\n          children: props.name\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.maxContainer,\n      children: [_jsx(Text, {\n        style: styles.maxContainerText,\n        children: \"Max:\"\n      }), _jsx(TextInput, {\n        style: styles.maxContainerText,\n        placeholder: props.max.toString(),\n        onChangeText: function onChangeText(text) {\n          return setMaxValue(parseInt(text));\n        },\n        onSubmitEditing: function onSubmitEditing() {\n          return props.setMaxAmount(props.id, maxValue);\n        },\n        keyboardType: \"numeric\"\n      })]\n    }), props.editMode ? _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return props.deleteItem(props.id);\n      },\n      children: _jsx(Ionicons, {\n        style: styles.removeButton,\n        name: \"trash\",\n        size: 20,\n        color: Colors.Darkest\n      })\n    }) : _jsx(View, {})]\n  });\n};\nexport default Counter;\nvar styles = StyleSheet.create({\n  container: {\n    width: 100,\n    justifyContent: \"space-between\",\n    height: \"auto\",\n    marginHorizontal: 5\n  },\n  levelBlock: {\n    backgroundColor: Colors.secundary,\n    height: 100,\n    elevation: 5,\n    borderRadius: 10\n  },\n  levelTitle: {\n    fontFamily: \"Regular\",\n    color: Colors.primary,\n    textAlign: \"center\",\n    fontSize: 12\n  },\n  levelNumber: {\n    fontFamily: \"Bold\",\n    color: Colors.primary,\n    textAlign: \"center\",\n    fontSize: 24\n  },\n  maxContainerText: {\n    fontFamily: \"Bold\",\n    color: Colors.Tertiary,\n    textAlign: \"center\",\n    alignSelf: \"center\",\n    fontSize: 12\n  },\n  maxContainer: {\n    alignContent: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"row\"\n  },\n  levelTitleContainer: {\n    flex: 1\n  },\n  levelNumberContainer: {\n    alignContent: \"center\",\n    flex: 1.5,\n    justifyContent: \"center\"\n  },\n  removeButton: {\n    padding: 4,\n    alignSelf: \"center\"\n  }\n});","map":{"version":3,"names":["Colors","useState","Ionicons","jsx","_jsx","jsxs","_jsxs","Counter","props","_useState","_useState2","_slicedToArray","maxValue","setMaxValue","_useState3","_useState4","title","setTitle","View","style","styles","container","children","levelBlock","levelNumberContainer","TouchableOpacity","onPress","subtractSlot","id","Text","levelNumber","amount","levelTitleContainer","TextInput","levelTitle","multiline","onChangeText","newText","onSubmitEditing","onBlur","name","maxContainer","maxContainerText","placeholder","max","toString","text","parseInt","setMaxAmount","keyboardType","editMode","deleteItem","removeButton","size","color","Darkest","StyleSheet","create","width","justifyContent","height","marginHorizontal","backgroundColor","secundary","elevation","borderRadius","fontFamily","primary","textAlign","fontSize","Tertiary","alignSelf","alignContent","flexDirection","flex","padding"],"sources":["D:/Users/Thomas/Documents/Programming Projects/Mobile/DnD App/DnDApp3/DnDApp/components/CombatScreen/Counter.tsx"],"sourcesContent":["import {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport Colors from \"../../styles/Colors\";\r\nimport { useState } from \"react\";\r\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\r\n\r\ninterface Props {\r\n  amount: number;\r\n  max: number;\r\n  name: string;\r\n  id: number;\r\n  editMode: boolean;\r\n  subtractSlot: (index: number) => void;\r\n  setMaxAmount: (id: number, maxAmount: number) => void;\r\n  deleteItem: (id: number) => void;\r\n  setTitle: (id: number, name: string) => void;\r\n}\r\n\r\nconst Counter = (props: Props) => {\r\n  const [maxValue, setMaxValue] = useState<number>(0);\r\n  const [title, setTitle] = useState<string>(\"\");\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.levelBlock}>\r\n        <View style={styles.levelNumberContainer}>\r\n          <TouchableOpacity onPress={() => props.subtractSlot(props.id)}>\r\n            <Text style={styles.levelNumber}>{props.amount}</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View style={styles.levelTitleContainer}>\r\n          <TextInput\r\n            style={styles.levelTitle}\r\n            multiline={true}\r\n            onChangeText={(newText) => {\r\n              setTitle(newText);\r\n            }}\r\n            onSubmitEditing={() => {\r\n              props.setTitle(props.id, title);\r\n            }}\r\n            onBlur={() => {\r\n              props.setTitle(props.id, title);\r\n            }}\r\n          >\r\n            {props.name}\r\n          </TextInput>\r\n        </View>\r\n      </View>\r\n      <View style={styles.maxContainer}>\r\n        <Text style={styles.maxContainerText}>Max:</Text>\r\n        <TextInput\r\n          style={styles.maxContainerText}\r\n          placeholder={props.max.toString()}\r\n          onChangeText={(text) => setMaxValue(parseInt(text))}\r\n          onSubmitEditing={() => props.setMaxAmount(props.id, maxValue)}\r\n          keyboardType=\"numeric\"\r\n        ></TextInput>\r\n      </View>\r\n      {props.editMode ? (\r\n        <TouchableOpacity onPress={() => props.deleteItem(props.id)}>\r\n          <Ionicons\r\n            style={styles.removeButton}\r\n            name=\"trash\"\r\n            size={20}\r\n            color={Colors.Darkest}\r\n          />\r\n        </TouchableOpacity>\r\n      ) : (\r\n        <View></View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: 100,\r\n    justifyContent: \"space-between\",\r\n    height: \"auto\",\r\n    marginHorizontal: 5,\r\n  },\r\n  levelBlock: {\r\n    backgroundColor: Colors.secundary,\r\n    height: 100,\r\n    elevation: 5,\r\n    borderRadius: 10,\r\n  },\r\n  levelTitle: {\r\n    fontFamily: \"Regular\",\r\n    color: Colors.primary,\r\n    textAlign: \"center\",\r\n    fontSize: 12,\r\n  },\r\n  levelNumber: {\r\n    fontFamily: \"Bold\",\r\n    color: Colors.primary,\r\n    textAlign: \"center\",\r\n    fontSize: 24,\r\n  },\r\n  maxContainerText: {\r\n    fontFamily: \"Bold\",\r\n    color: Colors.Tertiary,\r\n    textAlign: \"center\",\r\n    alignSelf: \"center\",\r\n    fontSize: 12,\r\n  },\r\n  maxContainer: {\r\n    alignContent: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"row\",\r\n  },\r\n  levelTitleContainer: {\r\n    flex: 1,\r\n  },\r\n  levelNumberContainer: {\r\n    alignContent: \"center\",\r\n    flex: 1.5,\r\n    justifyContent: \"center\",\r\n  },\r\n  removeButton: {\r\n    padding: 4,\r\n    alignSelf: \"center\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}