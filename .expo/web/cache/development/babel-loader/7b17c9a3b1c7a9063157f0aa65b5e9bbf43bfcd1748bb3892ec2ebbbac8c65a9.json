{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Colors from \"../../styles/Colors\";\nimport Counter from \"./Counter\";\nimport { database } from \"../database\";\nimport { useEffect, useState } from \"react\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Counters = function Counters() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    counters = _useState2[0],\n    setCounters = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    editMode = _useState4[0],\n    setEditMode = _useState4[1];\n  function SubtractSlotAmount(id) {\n    var _counters$find$amount, _counters$find;\n    database.UpdateTableByID(\"Counters\", id, \"amount\", ((_counters$find$amount = counters == null ? void 0 : (_counters$find = counters.find(function (d) {\n      return d.id === id;\n    })) == null ? void 0 : _counters$find.amount) != null ? _counters$find$amount : 0) - 1);\n    fetchData();\n  }\n  var ResetSlotsToMax = function ResetSlotsToMax() {\n    counters == null ? void 0 : counters.forEach(function (s) {\n      database.UpdateTableByID(\"Counters\", s.id, \"amount\", s.max);\n      fetchData();\n    });\n  };\n  var SetMaxAmount = function SetMaxAmount(id, maxValue) {\n    database.UpdateTableByID(\"Counters\", id, \"max\", maxValue);\n    fetchData();\n  };\n  var SetTitle = function SetTitle(id, name) {\n    database.UpdateTableByID(\"Counters\", id, \"name\", name);\n    fetchData();\n  };\n  var RemoveCounter = function RemoveCounter(id) {\n    database.RemoveRowByID(\"Counters\", id);\n    fetchData();\n  };\n  var AddCounter = function AddCounter() {\n    database.InsertIntoTable(\"Counters\", [\"name\", \"amount\", \"max\"], [\"Custom\", 0, 0]);\n    fetchData();\n  };\n  useEffect(function () {\n    fetchData();\n  }, []);\n  var fetchData = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var counterData = yield database.GetData(\"Counters\");\n        setCounters(counterData);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    });\n    return function fetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Counters\"\n    }), _jsxs(View, {\n      style: styles.slotContainer,\n      children: [counters == null ? void 0 : counters.map(function (val, index) {\n        return _jsx(Counter, {\n          amount: val.amount,\n          max: val.max,\n          name: val.name,\n          setMaxAmount: SetMaxAmount,\n          subtractSlot: SubtractSlotAmount,\n          deleteItem: RemoveCounter,\n          setTitle: SetTitle,\n          id: val.id,\n          editMode: editMode\n        }, index);\n      }), _jsxs(View, {\n        style: styles.buttonsContainer,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            return ResetSlotsToMax();\n          },\n          children: _jsx(Ionicons, {\n            name: \"reload\",\n            size: 20\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            return AddCounter();\n          },\n          children: _jsx(AntDesign, {\n            name: \"plussquare\",\n            size: 25\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            return setEditMode(!editMode);\n          },\n          children: _jsx(Ionicons, {\n            name: \"create-outline\",\n            size: 25,\n            style: {\n              color: editMode ? Colors.Highlight : Colors.Darkest\n            }\n          })\n        })]\n      })]\n    })]\n  });\n};\nexport default Counters;\nvar styles = StyleSheet.create({\n  container: {},\n  slotContainer: {\n    flexDirection: \"row\"\n  },\n  header: {\n    marginBottom: 20\n  },\n  title: {\n    textAlign: \"center\",\n    fontFamily: \"Regular\",\n    color: Colors.Darkest,\n    fontSize: 30\n  },\n  buttonsContainer: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    alignItems: \"flex-end\",\n    width: 40,\n    height: 120\n  },\n  button: {\n    padding: 10\n  }\n});","map":{"version":3,"names":["Colors","Counter","database","useEffect","useState","Ionicons","AntDesign","jsx","_jsx","jsxs","_jsxs","Counters","_useState","_useState2","_slicedToArray","counters","setCounters","_useState3","_useState4","editMode","setEditMode","SubtractSlotAmount","id","_counters$find$amount","_counters$find","UpdateTableByID","find","d","amount","fetchData","ResetSlotsToMax","forEach","s","max","SetMaxAmount","maxValue","SetTitle","name","RemoveCounter","RemoveRowByID","AddCounter","InsertIntoTable","_ref","_asyncToGenerator","counterData","GetData","error","console","apply","arguments","View","children","Text","style","styles","title","slotContainer","map","val","index","setMaxAmount","subtractSlot","deleteItem","setTitle","buttonsContainer","TouchableOpacity","button","onPress","size","color","Highlight","Darkest","StyleSheet","create","container","flexDirection","header","marginBottom","textAlign","fontFamily","fontSize","flex","justifyContent","alignItems","width","height","padding"],"sources":["D:/Users/Thomas/Documents/Programming Projects/Mobile/DnD App/DnDApp3/DnDApp/components/CombatScreen/Counters.tsx"],"sourcesContent":["import {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport Colors from \"../../styles/Colors\";\r\nimport Counter from \"./Counter\";\r\nimport { database } from \"../database\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { CounterData } from \"../DataInterfaces\";\r\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\n\r\nconst Counters = () => {\r\n  const [counters, setCounters] = useState<CounterData[] | null>(null);\r\n  const [editMode, setEditMode] = useState<boolean>(false);\r\n\r\n  function SubtractSlotAmount(id: number) {\r\n    database.UpdateTableByID(\r\n      \"Counters\",\r\n      id,\r\n      \"amount\",\r\n      (counters?.find((d) => d.id === id)?.amount ?? 0) - 1\r\n    );\r\n    fetchData();\r\n  }\r\n\r\n  const ResetSlotsToMax = () => {\r\n    counters?.forEach((s) => {\r\n      database.UpdateTableByID(\"Counters\", s.id, \"amount\", s.max);\r\n      fetchData();\r\n    });\r\n  };\r\n\r\n  const SetMaxAmount = (id: number, maxValue: number) => {\r\n    database.UpdateTableByID(\"Counters\", id, \"max\", maxValue);\r\n    fetchData();\r\n  };\r\n\r\n  const SetTitle = (id: number, name: string) => {\r\n    database.UpdateTableByID(\"Counters\", id, \"name\", name);\r\n    fetchData();\r\n  };\r\n  const RemoveCounter = (id: number) => {\r\n    database.RemoveRowByID(\"Counters\", id);\r\n    fetchData();\r\n  };\r\n\r\n  const AddCounter = () => {\r\n    database.InsertIntoTable(\r\n      \"Counters\",\r\n      [\"name\", \"amount\", \"max\"],\r\n      [\"Custom\", 0, 0]\r\n    );\r\n    fetchData();\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      let counterData = await database.GetData<CounterData>(\"Counters\");\r\n      setCounters(counterData);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <Text style={styles.title}>Counters</Text>\r\n      <View style={styles.slotContainer}>\r\n        {counters?.map((val, index) => (\r\n          <Counter\r\n            amount={val.amount}\r\n            max={val.max}\r\n            name={val.name}\r\n            setMaxAmount={SetMaxAmount}\r\n            subtractSlot={SubtractSlotAmount}\r\n            deleteItem={RemoveCounter}\r\n            setTitle={SetTitle}\r\n            id={val.id}\r\n            key={index}\r\n            editMode={editMode}\r\n          />\r\n        ))}\r\n        <View style={styles.buttonsContainer}>\r\n          <TouchableOpacity\r\n            style={styles.button}\r\n            onPress={() => ResetSlotsToMax()}\r\n          >\r\n            <Ionicons name=\"reload\" size={20} />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={styles.button} onPress={() => AddCounter()}>\r\n            <AntDesign name=\"plussquare\" size={25}></AntDesign>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={styles.button}\r\n            onPress={() => setEditMode(!editMode)}\r\n          >\r\n            <Ionicons\r\n              name=\"create-outline\"\r\n              size={25}\r\n              style={{ color: editMode ? Colors.Highlight : Colors.Darkest }}\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Counters;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {},\r\n  slotContainer: {\r\n    flexDirection: \"row\",\r\n  },\r\n  header: {\r\n    marginBottom: 20,\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    fontFamily: \"Regular\",\r\n    color: Colors.Darkest,\r\n    fontSize: 30,\r\n  },\r\n  buttonsContainer: {\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"flex-end\",\r\n    width: 40,\r\n    height: 120,\r\n  },\r\n  button: {\r\n    padding: 10,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}