{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Colors from \"../../styles/Colors\";\nimport { useEffect, useState } from \"react\";\nimport { database } from \"../database\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var CoinRow = function CoinRow(_ref) {\n  var title = _ref.title,\n    amount = _ref.amount,\n    updateCoins = _ref.updateCoins;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    quantity = _useState2[0],\n    setQuantity = _useState2[1];\n  return _jsxs(View, {\n    style: styles.row,\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: `${title}: `\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(val) {\n        return setQuantity(parseInt(val));\n      },\n      onSubmitEditing: function onSubmitEditing() {\n        return updateCoins(title, quantity);\n      },\n      onBlur: function onBlur() {\n        return updateCoins(title, quantity);\n      },\n      children: amount\n    })]\n  });\n};\nexport var CoinPouch = function CoinPouch() {\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    coins = _useState4[0],\n    setCoins = _useState4[1];\n  useEffect(function () {\n    fetchData();\n  }, []);\n  var fetchData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var data = yield database.GetData(\"Coins\");\n        setCoins(data);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    });\n    return function fetchData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var updateCoins = function updateCoins(name, amount) {\n    if (isNaN(amount)) amount = 0;\n    database.UpdateTable(\"Coins\", name, \"amount\", amount);\n    fetchData();\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Coin Pouch\"\n    }), _jsx(View, {\n      style: styles.line\n    }), coins == null ? void 0 : coins.map(function (val, index) {\n      return _jsx(CoinRow, {\n        title: val.name,\n        amount: val.amount,\n        updateCoins: updateCoins\n      }, index);\n    })]\n  });\n};\nexport default CoinPouch;\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    backgroundColor: Colors.secundary,\n    borderRadius: 10,\n    elevation: 5,\n    opacity: 1,\n    marginHorizontal: 10\n  },\n  title: {\n    color: \"#FFFCAA\",\n    fontFamily: \"Bold\",\n    textAlign: \"center\",\n    fontSize: 20\n  },\n  line: {\n    borderWidth: 1,\n    width: \"100%\",\n    alignSelf: \"center\",\n    marginVertical: 4\n  },\n  text: {\n    color: Colors.primary,\n    fontFamily: \"Regular\",\n    textAlign: \"left\",\n    fontSize: 13,\n    marginVertical: 6\n  },\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  input: {\n    color: Colors.primary,\n    fontFamily: \"Regular\",\n    fontSize: 13\n  }\n});","map":{"version":3,"names":["Colors","useEffect","useState","database","jsx","_jsx","jsxs","_jsxs","CoinRow","_ref","title","amount","updateCoins","_useState","_useState2","_slicedToArray","quantity","setQuantity","View","style","styles","row","children","Text","text","TextInput","input","onChangeText","val","parseInt","onSubmitEditing","onBlur","CoinPouch","_useState3","_useState4","coins","setCoins","fetchData","_ref2","_asyncToGenerator","data","GetData","error","console","apply","arguments","name","isNaN","UpdateTable","container","line","map","index","StyleSheet","create","padding","backgroundColor","secundary","borderRadius","elevation","opacity","marginHorizontal","color","fontFamily","textAlign","fontSize","borderWidth","width","alignSelf","marginVertical","primary","flexDirection","justifyContent"],"sources":["D:/Users/Thomas/Documents/Programming Projects/Mobile/DnD App/DnDApp3/DnDApp/components/ItemScreen/CoinPouch.tsx"],"sourcesContent":["import { View, Text, TextInput, StyleSheet } from \"react-native\";\r\nimport Colors from \"../../styles/Colors\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { database } from \"../database\";\r\nimport { CoinData } from \"../DataInterfaces\";\r\n\r\nexport interface Props {\r\n  title: string;\r\n  amount: number;\r\n  updateCoins: (name: string, amount: number) => void;\r\n}\r\n\r\nexport const CoinRow = ({ title, amount, updateCoins }: Props) => {\r\n  const [quantity, setQuantity] = useState<number>(0);\r\n\r\n  return (\r\n    <View style={styles.row}>\r\n      <Text style={styles.text}>{`${title}: `}</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        onChangeText={(val) => setQuantity(parseInt(val))}\r\n        onSubmitEditing={() => updateCoins(title, quantity)}\r\n        onBlur={() => updateCoins(title, quantity)}\r\n      >\r\n        {amount}\r\n      </TextInput>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport const CoinPouch = () => {\r\n  const [coins, setCoins] = useState<CoinData[] | null>(null);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      let data = await database.GetData<CoinData>(\"Coins\");\r\n      setCoins(data);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  const updateCoins = (name: string, amount: number) => {\r\n    if (isNaN(amount)) amount = 0;\r\n    database.UpdateTable(\"Coins\", name, \"amount\", amount);\r\n    fetchData();\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Coin Pouch</Text>\r\n      <View style={styles.line}></View>\r\n      {coins?.map((val, index) => (\r\n        <CoinRow\r\n          title={val.name}\r\n          amount={val.amount}\r\n          key={index}\r\n          updateCoins={updateCoins}\r\n        />\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default CoinPouch;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 20,\r\n    backgroundColor: Colors.secundary,\r\n    borderRadius: 10,\r\n    elevation: 5,\r\n    opacity: 1,\r\n    marginHorizontal: 10,\r\n  },\r\n  title: {\r\n    color: \"#FFFCAA\",\r\n    fontFamily: \"Bold\",\r\n    textAlign: \"center\",\r\n    fontSize: 20,\r\n  },\r\n  line: {\r\n    borderWidth: 1,\r\n    width: \"100%\",\r\n    alignSelf: \"center\",\r\n    marginVertical: 4,\r\n  },\r\n  text: {\r\n    color: Colors.primary,\r\n    fontFamily: \"Regular\",\r\n    textAlign: \"left\",\r\n    fontSize: 13,\r\n    marginVertical: 6,\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  input: {\r\n    color: Colors.primary,\r\n    fontFamily: \"Regular\",\r\n    fontSize: 13,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}