{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useFonts } from \"expo-font\";\nimport Colors from \"./styles/Colors\";\nimport CombatScreen from \"./components/CombatScreen\";\nimport React, { StrictMode, useEffect, useState } from \"react\";\nimport StatScreen from \"./components/StatScreen\";\nimport { database } from \"./components/database\";\nimport ItemScreen from \"./components/ItemScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useFonts = useFonts({\n      Bold: require(\"./assets/fonts/Merriweather-Bold.ttf\"),\n      BoldItalic: require(\"./assets/fonts/Merriweather-BoldItalic.ttf\"),\n      Light: require(\"./assets/fonts/Merriweather-Light.ttf\"),\n      LightItalic: require(\"./assets/fonts/Merriweather-LightItalic.ttf\"),\n      Regular: require(\"./assets/fonts/Merriweather-Regular.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modifiersChanged = _useState2[0],\n    setModifiersChanged = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    initialized = _useState4[0],\n    setInitialized = _useState4[1];\n  useEffect(function () {\n    checkInit();\n  }, []);\n  var checkInit = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var init = yield database.InitializeDatabase();\n        setInitialized(init);\n      } catch (error) {\n        console.error(\"Error: \", error);\n      }\n    });\n    return function checkInit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n  var totalPages = 3;\n  if (!fontsLoaded) {\n    return null;\n  }\n  function ShowScreen(index) {\n    var window = _jsx(View, {});\n    switch (index) {\n      case 0:\n        window = _jsx(CombatScreen, {\n          modifiersChanged: modifiersChanged\n        });\n        break;\n      case 1:\n        window = _jsx(StatScreen, {\n          setModifiersChanged: setModifiersChanged,\n          modifiersChanged: modifiersChanged\n        });\n        break;\n      case 2:\n        window = _jsx(ItemScreen, {});\n        break;\n    }\n    return window;\n  }\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: Colors.primary,\n      width: width,\n      height: height\n    }\n  });\n  return _jsx(StrictMode, {\n    children: initialized ? _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(FlatList, {\n        data: _toConsumableArray(Array(totalPages).keys()),\n        horizontal: true,\n        pagingEnabled: true,\n        showsHorizontalScrollIndicator: false,\n        keyExtractor: function keyExtractor(item) {\n          return item.toString();\n        },\n        initialNumToRender: totalPages,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsx(View, {\n            style: styles.container,\n            children: ShowScreen(item)\n          });\n        }\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    }) : _jsx(View, {})\n  });\n}","map":{"version":3,"names":["StatusBar","Dimensions","FlatList","StyleSheet","View","useFonts","Colors","CombatScreen","React","StrictMode","useEffect","useState","StatScreen","database","ItemScreen","jsx","_jsx","jsxs","_jsxs","App","_useFonts","Bold","require","BoldItalic","Light","LightItalic","Regular","_useFonts2","_slicedToArray","fontsLoaded","_useState","_useState2","modifiersChanged","setModifiersChanged","_useState3","_useState4","initialized","setInitialized","checkInit","_ref","_asyncToGenerator","init","InitializeDatabase","error","console","apply","arguments","_Dimensions$get","get","width","height","totalPages","ShowScreen","index","window","styles","create","container","flex","backgroundColor","primary","children","style","data","_toConsumableArray","Array","keys","horizontal","pagingEnabled","showsHorizontalScrollIndicator","keyExtractor","item","toString","initialNumToRender","renderItem","_ref2"],"sources":["D:/Users/Thomas/Documents/Programming Projects/Mobile/DnD App/DnDApp3/DnDApp/App.tsx"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport { Dimensions, FlatList, StyleSheet, View } from \"react-native\";\r\nimport { useFonts } from \"expo-font\";\r\nimport Colors from \"./styles/Colors\";\r\nimport CombatScreen from \"./components/CombatScreen\";\r\nimport React, { StrictMode, useEffect, useState } from \"react\";\r\nimport StatScreen from \"./components/StatScreen\";\r\nimport { database } from \"./components/database\";\r\nimport ItemScreen from \"./components/ItemScreen\";\r\n\r\nexport default function App() {\r\n  const [fontsLoaded] = useFonts({\r\n    Bold: require(\"./assets/fonts/Merriweather-Bold.ttf\"),\r\n    BoldItalic: require(\"./assets/fonts/Merriweather-BoldItalic.ttf\"),\r\n    Light: require(\"./assets/fonts/Merriweather-Light.ttf\"),\r\n    LightItalic: require(\"./assets/fonts/Merriweather-LightItalic.ttf\"),\r\n    Regular: require(\"./assets/fonts/Merriweather-Regular.ttf\"),\r\n  });\r\n\r\n  const [modifiersChanged, setModifiersChanged] = useState<boolean>(false);\r\n  const [initialized, setInitialized] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    checkInit();\r\n  }, []);\r\n\r\n  const checkInit = async () => {\r\n    try {\r\n      let init = await database.InitializeDatabase();\r\n      setInitialized(init);\r\n    } catch (error) {\r\n      console.error(\"Error: \", error);\r\n    }\r\n  };\r\n\r\n  const { width, height } = Dimensions.get(\"window\");\r\n  const totalPages = 3;\r\n\r\n  if (!fontsLoaded) {\r\n    return null;\r\n  }\r\n  function ShowScreen(index: number): React.JSX.Element {\r\n    let window: React.JSX.Element = <View></View>;\r\n    switch (index) {\r\n      case 0:\r\n        window = <CombatScreen modifiersChanged={modifiersChanged} />;\r\n        break;\r\n      case 1:\r\n        window = (\r\n          <StatScreen\r\n            setModifiersChanged={setModifiersChanged}\r\n            modifiersChanged={modifiersChanged}\r\n          />\r\n        );\r\n        break;\r\n      case 2:\r\n        window = <ItemScreen />;\r\n        break;\r\n    }\r\n    return window;\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: Colors.primary,\r\n      width: width,\r\n      height: height,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <StrictMode>\r\n      {initialized ? (\r\n        <View style={styles.container}>\r\n          <FlatList\r\n            data={[...Array(totalPages).keys()]}\r\n            horizontal\r\n            pagingEnabled={true}\r\n            showsHorizontalScrollIndicator={false}\r\n            keyExtractor={(item) => item.toString()}\r\n            initialNumToRender={totalPages}\r\n            renderItem={({ item }) => (\r\n              <View style={styles.container}>{ShowScreen(item)}</View>\r\n            )}\r\n          />\r\n          <StatusBar style=\"auto\" />\r\n        </View>\r\n      ) : (\r\n        <View></View>\r\n      )}\r\n    </StrictMode>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAE5C,SAASC,QAAQ,QAAQ,WAAW;AACpC,OAAOC,MAAM;AACb,OAAOC,YAAY;AACnB,OAAOC,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,UAAU;AACjB,SAASC,QAAQ;AACjB,OAAOC,UAAU;AAAgC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAsBf,QAAQ,CAAC;MAC7BgB,IAAI,EAAEC,OAAO,uCAAuC,CAAC;MACrDC,UAAU,EAAED,OAAO,6CAA6C,CAAC;MACjEE,KAAK,EAAEF,OAAO,wCAAwC,CAAC;MACvDG,WAAW,EAAEH,OAAO,8CAA8C,CAAC;MACnEI,OAAO,EAAEJ,OAAO,0CAA0C;IAC5D,CAAC,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAR,SAAA;IANKS,WAAW,GAAAF,UAAA;EAQlB,IAAAG,SAAA,GAAgDnB,QAAQ,CAAU,KAAK,CAAC;IAAAoB,UAAA,GAAAH,cAAA,CAAAE,SAAA;IAAjEE,gBAAgB,GAAAD,UAAA;IAAEE,mBAAmB,GAAAF,UAAA;EAC5C,IAAAG,UAAA,GAAsCvB,QAAQ,CAAU,KAAK,CAAC;IAAAwB,UAAA,GAAAP,cAAA,CAAAM,UAAA;IAAvDE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAElCzB,SAAS,CAAC,YAAM;IACd4B,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMA,SAAS;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC5B,IAAI;QACF,IAAIC,IAAI,SAAS5B,QAAQ,CAAC6B,kBAAkB,CAAC,CAAC;QAC9CL,cAAc,CAACI,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MACjC;IACF,CAAC;IAAA,gBAPKL,SAASA,CAAA;MAAA,OAAAC,IAAA,CAAAM,KAAA,OAAAC,SAAA;IAAA;EAAA,GAOd;EAED,IAAAC,eAAA,GAA0B9C,UAAU,CAAC+C,GAAG,CAAC,QAAQ,CAAC;IAA1CC,KAAK,GAAAF,eAAA,CAALE,KAAK;IAAEC,MAAM,GAAAH,eAAA,CAANG,MAAM;EACrB,IAAMC,UAAU,GAAG,CAAC;EAEpB,IAAI,CAACtB,WAAW,EAAE;IAChB,OAAO,IAAI;EACb;EACA,SAASuB,UAAUA,CAACC,KAAa,EAAqB;IACpD,IAAIC,MAAyB,GAAGtC,IAAA,CAACZ,IAAI,IAAO,CAAC;IAC7C,QAAQiD,KAAK;MACX,KAAK,CAAC;QACJC,MAAM,GAAGtC,IAAA,CAACT,YAAY;UAACyB,gBAAgB,EAAEA;QAAiB,CAAE,CAAC;QAC7D;MACF,KAAK,CAAC;QACJsB,MAAM,GACJtC,IAAA,CAACJ,UAAU;UACTqB,mBAAmB,EAAEA,mBAAoB;UACzCD,gBAAgB,EAAEA;QAAiB,CACpC,CACF;QACD;MACF,KAAK,CAAC;QACJsB,MAAM,GAAGtC,IAAA,CAACF,UAAU,IAAE,CAAC;QACvB;IACJ;IACA,OAAOwC,MAAM;EACf;EAEA,IAAMC,MAAM,GAAGpD,UAAU,CAACqD,MAAM,CAAC;IAC/BC,SAAS,EAAE;MACTC,IAAI,EAAE,CAAC;MACPC,eAAe,EAAErD,MAAM,CAACsD,OAAO;MAC/BX,KAAK,EAAEA,KAAK;MACZC,MAAM,EAAEA;IACV;EACF,CAAC,CAAC;EAEF,OACElC,IAAA,CAACP,UAAU;IAAAoD,QAAA,EACRzB,WAAW,GACVlB,KAAA,CAACd,IAAI;MAAC0D,KAAK,EAAEP,MAAM,CAACE,SAAU;MAAAI,QAAA,GAC5B7C,IAAA,CAACd,QAAQ;QACP6D,IAAI,EAAAC,kBAAA,CAAMC,KAAK,CAACd,UAAU,CAAC,CAACe,IAAI,CAAC,CAAC,CAAE;QACpCC,UAAU;QACVC,aAAa,EAAE,IAAK;QACpBC,8BAA8B,EAAE,KAAM;QACtCC,YAAY,EAAE,SAAAA,aAACC,IAAI;UAAA,OAAKA,IAAI,CAACC,QAAQ,CAAC,CAAC;QAAA,CAAC;QACxCC,kBAAkB,EAAEtB,UAAW;QAC/BuB,UAAU,EAAE,SAAAA,WAAAC,KAAA;UAAA,IAAGJ,IAAI,GAAAI,KAAA,CAAJJ,IAAI;UAAA,OACjBvD,IAAA,CAACZ,IAAI;YAAC0D,KAAK,EAAEP,MAAM,CAACE,SAAU;YAAAI,QAAA,EAAET,UAAU,CAACmB,IAAI;UAAC,CAAO,CAAC;QAAA;MACxD,CACH,CAAC,EACFvD,IAAA,CAAChB,SAAS;QAAC8D,KAAK,EAAC;MAAM,CAAE,CAAC;IAAA,CACtB,CAAC,GAEP9C,IAAA,CAACZ,IAAI,IAAO;EACb,CACS,CAAC;AAEjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}