{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Colors from \"../../styles/Colors\";\nimport { useEffect, useState } from \"react\";\nimport LocalSpells from \"../LocalSpells\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddSpellModal = function AddSpellModal(props) {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    apiData = _useState2[0],\n    setApiData = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    search = _useState4[0],\n    setSearch = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    chosenSearch = _useState6[0],\n    setChosenSearch = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    searchList = _useState8[0],\n    setSearchList = _useState8[1];\n  var URL = `https://www.dnd5eapi.co/api/spells/`;\n  useEffect(function () {\n    FillAPIDataAtStart();\n  }, []);\n  function FillAPIDataAtStart() {\n    fetch(`${URL}`).then(function (resp) {\n      return resp.json();\n    }).then(function (json) {\n      if (!json.error) {\n        setApiData(json);\n      }\n    }).catch(function (error) {\n      return console.error(error);\n    });\n  }\n  function ConfirmSearch() {\n    props.setModal(false);\n    if (!chosenSearch) return;\n    var localSearch = LocalSpells.find(function (data) {\n      return data.name === chosenSearch;\n    });\n    if (localSearch) {\n      props.saveSpell(localSearch);\n      return;\n    }\n    var searchTerm = chosenSearch.toLowerCase().trim().replace(/ /g, \"-\").replace(/'/g, \"-\").replace(/,/g, \"\");\n    fetch(`${URL}${searchTerm}`).then(function (resp) {\n      return resp.json();\n    }).then(function (json) {\n      if (json && !json.error) {\n        props.saveSpell(json);\n      }\n    }).catch(function (error) {\n      return console.error(error);\n    });\n  }\n  useEffect(function () {\n    UpdateSearches();\n  }, [search]);\n  function UpdateSearches() {\n    if (!apiData) return;\n    if (search.length === 0) {\n      setSearchList([]);\n      return;\n    }\n    var term = search.toLowerCase().trimEnd();\n    var itemList = [];\n    var localFilteredItems = LocalSpells.filter(function (item) {\n      return item.name.toLocaleLowerCase().startsWith(`${term}`);\n    });\n    var filteredItems = apiData.results.filter(function (item) {\n      return item.name.toLocaleLowerCase().startsWith(`${term}`);\n    });\n    if (!filteredItems && !localFilteredItems) {\n      setSearchList([]);\n      return;\n    }\n    var maxItems = 3;\n    for (var index = 0; index < localFilteredItems.length; index++) {\n      if (index >= 3) break;\n      maxItems -= 1;\n      itemList.push(localFilteredItems[index].name);\n    }\n    for (var _index = 0; _index < filteredItems.length; _index++) {\n      if (_index >= 3 || maxItems === 0) break;\n      maxItems -= 1;\n      itemList.push(filteredItems[_index].name);\n    }\n    setSearchList(itemList);\n    setChosenSearch(itemList[0]);\n  }\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Modal, {\n      transparent: true,\n      children: _jsx(View, {\n        style: styles.modalContainer,\n        children: _jsxs(View, {\n          style: styles.modalContent,\n          children: [_jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Acid Arrow\",\n            placeholderTextColor: \"grey\",\n            onSubmitEditing: function onSubmitEditing() {\n              ConfirmSearch();\n            },\n            onChangeText: function onChangeText(newText) {\n              setSearch(newText);\n            }\n          }), searchList === null || (searchList == null ? void 0 : searchList.length) === 0 ? _jsx(View, {}) : _jsx(View, {\n            style: styles.line\n          }), searchList == null ? void 0 : searchList.map(function (item, index) {\n            return _jsx(Text, {\n              style: index === 0 ? styles.firstSearchResult : styles.searchResult,\n              children: item\n            }, index);\n          })]\n        })\n      })\n    })\n  });\n};\nexport default AddSpellModal;\nvar styles = StyleSheet.create({\n  container: {},\n  suggestion: {\n    fontFamily: \"Regular\"\n  },\n  searchContainer: {\n    backgroundColor: \"black\"\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0,0,0,0.6)\"\n  },\n  modalContent: {\n    backgroundColor: Colors.primary,\n    width: \"60%\",\n    padding: 20,\n    borderRadius: 5,\n    elevation: 5,\n    opacity: 1\n  },\n  input: {\n    fontFamily: \"Regular\"\n  },\n  searchResult: {\n    fontFamily: \"Regular\",\n    paddingBottom: 5\n  },\n  firstSearchResult: {\n    color: Colors.secundary,\n    fontFamily: \"Bold\",\n    marginTop: 10,\n    paddingBottom: 10\n  },\n  line: {\n    height: 1,\n    backgroundColor: \"black\",\n    marginVertical: 10\n  }\n});","map":{"version":3,"names":["Colors","useEffect","useState","LocalSpells","jsx","_jsx","jsxs","_jsxs","AddSpellModal","props","_useState","_useState2","_slicedToArray","apiData","setApiData","_useState3","_useState4","search","setSearch","_useState5","_useState6","chosenSearch","setChosenSearch","_useState7","_useState8","searchList","setSearchList","URL","FillAPIDataAtStart","fetch","then","resp","json","error","catch","console","ConfirmSearch","setModal","localSearch","find","data","name","saveSpell","searchTerm","toLowerCase","trim","replace","UpdateSearches","length","term","trimEnd","itemList","localFilteredItems","filter","item","toLocaleLowerCase","startsWith","filteredItems","results","maxItems","index","push","View","style","styles","container","children","Modal","transparent","modalContainer","modalContent","TextInput","input","placeholder","placeholderTextColor","onSubmitEditing","onChangeText","newText","line","map","Text","firstSearchResult","searchResult","StyleSheet","create","suggestion","fontFamily","searchContainer","backgroundColor","flex","justifyContent","alignItems","primary","width","padding","borderRadius","elevation","opacity","paddingBottom","color","secundary","marginTop","height","marginVertical"],"sources":["D:/Users/Thomas/Documents/Programming Projects/Mobile/DnD App/DnDApp3/DnDApp/components/CombatScreen/AddSpellModal.tsx"],"sourcesContent":["import { View, TextInput, StyleSheet, Modal, Text } from \"react-native\";\r\nimport Colors from \"../../styles/Colors\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { SpellData } from \"../DataInterfaces\";\r\nimport LocalSpells from \"../LocalSpells\";\r\n\r\ninterface Props {\r\n  setModal: (updateModel: boolean) => void;\r\n  saveSpell: (spellData: SpellData) => void;\r\n}\r\n\r\ninterface api {\r\n  results: SpellData[];\r\n}\r\n\r\nconst AddSpellModal = (props: Props) => {\r\n  const [apiData, setApiData] = useState<api | null>(null);\r\n  const [search, setSearch] = useState<string>(\"\");\r\n  const [chosenSearch, setChosenSearch] = useState<string>(\"\");\r\n  const [searchList, setSearchList] = useState<string[] | null>(null);\r\n\r\n  const URL: string = `https://www.dnd5eapi.co/api/spells/`;\r\n\r\n  useEffect(() => {\r\n    FillAPIDataAtStart();\r\n  }, []);\r\n\r\n  function FillAPIDataAtStart() {\r\n    fetch(`${URL}`)\r\n      .then((resp) => resp.json())\r\n      .then((json) => {\r\n        if (!json.error) {\r\n          setApiData(json);\r\n        }\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n  function ConfirmSearch() {\r\n    props.setModal(false);\r\n\r\n    if (!chosenSearch) return;\r\n\r\n    let localSearch: SpellData | undefined = LocalSpells.find(\r\n      (data) => data.name === chosenSearch\r\n    );\r\n\r\n    if (localSearch) {\r\n      props.saveSpell(localSearch);\r\n      return;\r\n    }\r\n\r\n    let searchTerm: string = chosenSearch\r\n      .toLowerCase()\r\n      .trim()\r\n      .replace(/ /g, \"-\")\r\n      .replace(/'/g, \"-\")\r\n      .replace(/,/g, \"\");\r\n\r\n    fetch(`${URL}${searchTerm}`)\r\n      .then((resp) => resp.json())\r\n      .then((json: SpellData) => {\r\n        if (json && !json.error) {\r\n          //let updatedSpellList = props.spell ? [...props.spell, json] : [json];\r\n          props.saveSpell(json);\r\n        }\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n  useEffect(() => {\r\n    UpdateSearches();\r\n  }, [search]);\r\n\r\n  function UpdateSearches() {\r\n    if (!apiData) return;\r\n\r\n    if (search.length === 0) {\r\n      setSearchList([]);\r\n      return;\r\n    }\r\n\r\n    let term: string = search.toLowerCase().trimEnd();\r\n\r\n    let itemList: string[] = [];\r\n\r\n    let localFilteredItems: SpellData[] = LocalSpells.filter((item) => {\r\n      return item.name.toLocaleLowerCase().startsWith(`${term}`);\r\n    });\r\n\r\n    let filteredItems: SpellData[] = apiData.results.filter((item) => {\r\n      return item.name.toLocaleLowerCase().startsWith(`${term}`);\r\n    });\r\n\r\n    if (!filteredItems && !localFilteredItems) {\r\n      setSearchList([]);\r\n      return;\r\n    }\r\n\r\n    let maxItems = 3;\r\n\r\n    for (let index = 0; index < localFilteredItems.length; index++) {\r\n      if (index >= 3) break;\r\n      maxItems -= 1;\r\n      itemList.push(localFilteredItems[index].name);\r\n    }\r\n\r\n    for (let index = 0; index < filteredItems.length; index++) {\r\n      if (index >= 3 || maxItems === 0) break;\r\n      maxItems -= 1;\r\n      itemList.push(filteredItems[index].name);\r\n    }\r\n    setSearchList(itemList);\r\n    setChosenSearch(itemList[0]);\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Modal transparent={true}>\r\n        <View style={styles.modalContainer}>\r\n          <View style={styles.modalContent}>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder={\"Acid Arrow\"}\r\n              placeholderTextColor=\"grey\"\r\n              onSubmitEditing={() => {\r\n                ConfirmSearch();\r\n              }}\r\n              onChangeText={(newText) => {\r\n                setSearch(newText);\r\n              }}\r\n            ></TextInput>\r\n            {searchList === null || searchList?.length === 0 ? (\r\n              <View></View>\r\n            ) : (\r\n              <View style={styles.line}></View>\r\n            )}\r\n            {searchList?.map((item, index) => (\r\n              <Text\r\n                key={index}\r\n                style={\r\n                  index === 0 ? styles.firstSearchResult : styles.searchResult\r\n                }\r\n              >\r\n                {item}\r\n              </Text>\r\n            ))}\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default AddSpellModal;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {},\r\n  suggestion: { fontFamily: \"Regular\" },\r\n  searchContainer: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"rgba(0,0,0,0.6)\",\r\n  },\r\n  modalContent: {\r\n    backgroundColor: Colors.primary,\r\n    width: \"60%\",\r\n    padding: 20,\r\n    borderRadius: 5,\r\n    elevation: 5,\r\n    opacity: 1,\r\n  },\r\n  input: {\r\n    fontFamily: \"Regular\",\r\n  },\r\n  searchResult: {\r\n    fontFamily: \"Regular\",\r\n    paddingBottom: 5,\r\n  },\r\n  firstSearchResult: {\r\n    color: Colors.secundary,\r\n    fontFamily: \"Bold\",\r\n    marginTop: 10,\r\n    paddingBottom: 10,\r\n  },\r\n  line: {\r\n    height: 1,\r\n    backgroundColor: \"black\",\r\n    marginVertical: 10,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}